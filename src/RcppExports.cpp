// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// buildMarkov
NumericMatrix buildMarkov(int nbsp, NumericVector colo, NumericMatrix metaweb, double basexti, double mn, double mx, double shape);
RcppExport SEXP _biogeonet_buildMarkov(SEXP nbspSEXP, SEXP coloSEXP, SEXP metawebSEXP, SEXP basextiSEXP, SEXP mnSEXP, SEXP mxSEXP, SEXP shapeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nbsp(nbspSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type colo(coloSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type metaweb(metawebSEXP);
    Rcpp::traits::input_parameter< double >::type basexti(basextiSEXP);
    Rcpp::traits::input_parameter< double >::type mn(mnSEXP);
    Rcpp::traits::input_parameter< double >::type mx(mxSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    rcpp_result_gen = Rcpp::wrap(buildMarkov(nbsp, colo, metaweb, basexti, mn, mx, shape));
    return rcpp_result_gen;
END_RCPP
}
// colonization
double colonization(double envir, double maxcolo, double opti, double width);
RcppExport SEXP _biogeonet_colonization(SEXP envirSEXP, SEXP maxcoloSEXP, SEXP optiSEXP, SEXP widthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type envir(envirSEXP);
    Rcpp::traits::input_parameter< double >::type maxcolo(maxcoloSEXP);
    Rcpp::traits::input_parameter< double >::type opti(optiSEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    rcpp_result_gen = Rcpp::wrap(colonization(envir, maxcolo, opti, width));
    return rcpp_result_gen;
END_RCPP
}
// extinction
double extinction(double inter, double basexti, double mn, double mx, double shape);
RcppExport SEXP _biogeonet_extinction(SEXP interSEXP, SEXP basextiSEXP, SEXP mnSEXP, SEXP mxSEXP, SEXP shapeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type inter(interSEXP);
    Rcpp::traits::input_parameter< double >::type basexti(basextiSEXP);
    Rcpp::traits::input_parameter< double >::type mn(mnSEXP);
    Rcpp::traits::input_parameter< double >::type mx(mxSEXP);
    Rcpp::traits::input_parameter< double >::type shape(shapeSEXP);
    rcpp_result_gen = Rcpp::wrap(extinction(inter, basexti, mn, mx, shape));
    return rcpp_result_gen;
END_RCPP
}
// getEigenElements
Rcpp::List getEigenElements(arma::mat markov);
RcppExport SEXP _biogeonet_getEigenElements(SEXP markovSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type markov(markovSEXP);
    rcpp_result_gen = Rcpp::wrap(getEigenElements(markov));
    return rcpp_result_gen;
END_RCPP
}
// getEigenElementsSp
Rcpp::List getEigenElementsSp(arma::sp_mat smarkov);
RcppExport SEXP _biogeonet_getEigenElementsSp(SEXP smarkovSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type smarkov(smarkovSEXP);
    rcpp_result_gen = Rcpp::wrap(getEigenElementsSp(smarkov));
    return rcpp_result_gen;
END_RCPP
}
// nicheModel
NumericMatrix nicheModel(int nbsp, double connec, int mode);
RcppExport SEXP _biogeonet_nicheModel(SEXP nbspSEXP, SEXP connecSEXP, SEXP modeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nbsp(nbspSEXP);
    Rcpp::traits::input_parameter< double >::type connec(connecSEXP);
    Rcpp::traits::input_parameter< int >::type mode(modeSEXP);
    rcpp_result_gen = Rcpp::wrap(nicheModel(nbsp, connec, mode));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_biogeonet_buildMarkov", (DL_FUNC) &_biogeonet_buildMarkov, 7},
    {"_biogeonet_colonization", (DL_FUNC) &_biogeonet_colonization, 4},
    {"_biogeonet_extinction", (DL_FUNC) &_biogeonet_extinction, 5},
    {"_biogeonet_getEigenElements", (DL_FUNC) &_biogeonet_getEigenElements, 1},
    {"_biogeonet_getEigenElementsSp", (DL_FUNC) &_biogeonet_getEigenElementsSp, 1},
    {"_biogeonet_nicheModel", (DL_FUNC) &_biogeonet_nicheModel, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_biogeonet(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
